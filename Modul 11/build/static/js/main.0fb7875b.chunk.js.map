{"version":3,"sources":["components/ProtectedRoute.js","firebase/firebase.js","actions/auth.js","components/Home.js","components/Login.js","App.js","reducers/index.js","reducers/auth.js","root.js","configureStore.js","index.js"],"names":["ProtectedRoute","Component","component","isAuthenticated","isVerifying","rest","render","props","to","pathname","state","from","location","myFirebase","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","LOGIN_REQUEST","firestore","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","VERIFY_REQUEST","VERIFY_SUCCESS","receiveLogin","user","type","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","catch","error","logoutUser","signOut","verifyAuth","onAuthStateChanged","Home","handleLogout","this","isLoggingOut","logoutError","onClick","connect","Login","handleEmailChange","target","setState","value","handlePasswordChange","handleSubmit","classes","loginError","Container","maxWidth","Paper","className","paper","Avatar","avatar","Typography","variant","TextField","margin","fullWidth","id","label","name","onChange","errorText","Button","color","submit","withStyles","body","backgroundColor","marginTop","display","padding","flexDirection","alignItems","marginLeft","marginRight","form","marginBottom","textAlign","isLoggingIn","exact","path","combineReducers","action","verifyingError","store","persistedState","createStore","rootReducer","applyMiddleware","thunkMiddleware","configureStore","Root","ReactDOM","document","getElementById","serviceWorker"],"mappings":"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","file":"static/js/main.0fb7875b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nconst ProtectedRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    isVerifying,\r\n    ...rest\r\n}) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n        isVerifying ? (\r\n            <div />\r\n        ) : isAuthenticated ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect\r\n                to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n                }}\r\n            />\r\n        )\r\n    }\r\n    />\r\n);\r\nexport default ProtectedRoute;","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyABUUGxOLAtlgLhN_oqpZfnAZJiw-b_-Vw\",\r\n    authDomain: \"fir-login-app-c4d2b.firebaseapp.com\",\r\n    projectId: \"fir-login-app-c4d2b\",\r\n    storageBucket: \"fir-login-app-c4d2b.appspot.com\",\r\n    messagingSenderId: \"826993200272\",\r\n    appId: \"1:826993200272:web:d5f4ea5249db279880dc15\",\r\n    measurementId: \"G-CVDY28928D\"\r\n};\r\n\r\nexport const myFirebase = firebase.initializeApp(firebaseConfig);\r\nconst baseDb = myFirebase.firestore();\r\nexport const db = baseDb;","import { myFirebase } from '../firebase/firebase';\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\n\r\nexport const VERIFY_REQUEST = 'VERIFY_REQUEST';\r\nexport const VERIFY_SUCCESS = 'VERIFY_SUCCESS';\r\n\r\nconst requestLogin = () => {\r\n    return {\r\n        type: LOGIN_REQUEST\r\n    };\r\n};\r\n\r\nconst receiveLogin = user => {\r\n    return{\r\n        type: LOGIN_SUCCESS,\r\n        user\r\n    };\r\n};\r\n\r\nconst loginError = () => {\r\n    return {\r\n        type: LOGIN_FAILURE\r\n    };\r\n};\r\n\r\nconst requestLogout = () => {\r\n    return {\r\n        type: LOGOUT_REQUEST\r\n    };\r\n};\r\nconst receiveLogout = () => {\r\n    return {\r\n        type: LOGOUT_SUCCESS\r\n    };\r\n};\r\n\r\nconst logoutError = () => {\r\n    return {\r\n        type: LOGOUT_FAILURE\r\n    };\r\n};\r\nconst verifyRequest = () => {\r\n    return {\r\n        type: VERIFY_REQUEST\r\n    };\r\n};\r\nconst verifySuccess = () => {\r\n    return {\r\n        type: VERIFY_SUCCESS\r\n    };\r\n};\r\n\r\nexport const loginUser = (email, password) => dispatch => {\r\n    dispatch(requestLogin());\r\n    myFirebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then(user => {\r\n        dispatch(receiveLogin(user));\r\n    })\r\n    .catch(error => {\r\n    //Do something with the error if you want!\r\n        dispatch(loginError());\r\n    });\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    dispatch(requestLogout());\r\n    myFirebase\r\n    .auth()\r\n    .signOut()\r\n    .then(() => {\r\n        dispatch(receiveLogout());\r\n    })\r\n    .catch(error => {\r\n    //Do something with the error if you want!\r\n        dispatch(logoutError());\r\n    });\r\n};\r\n\r\nexport const verifyAuth = () => dispatch => {\r\n    dispatch(verifyRequest());\r\n    myFirebase.auth().onAuthStateChanged(user => {\r\n        if (user !== null) {\r\n            dispatch(receiveLogin(user));\r\n        }\r\n        dispatch(verifySuccess());\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../actions/auth\";\r\nclass Home extends Component {\r\n    handleLogout = () => {\r\n        const { dispatch } = this.props;\r\n        dispatch(logoutUser());\r\n    };\r\n    render() {\r\n        const { isLoggingOut, logoutError } = this.props; return (\r\n            <div>\r\n                <h1>This is your app's protected area.</h1>\r\n                <p>Any routes here will also be protected</p>\r\n                <button onClick={this.handleLogout}>Logout</button>\r\n                {isLoggingOut && <p>Logging Out....</p>}\r\n                {logoutError && <p>Error logging out</p>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLoggingOut: state.auth.isLoggingOut,\r\n        logoutError: state.auth.logoutError\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { loginUser } from \"../actions/auth\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst styles = () => ({\r\n    \"@global\": {\r\n        body: {\r\n            backgroundColor: \"#fff\"\r\n        }\r\n    },\r\n    paper: {\r\n        marginTop: 100,\r\n        display: \"flex\",\r\n        padding: 20,\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    avatar: {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        backgroundColor: \"#f50057\"\r\n    },\r\n    form: {\r\n        marginTop: 1\r\n    },\r\n    errorText: {\r\n        color: \"#f50057\",\r\n        marginBottom: 5,\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nclass Login extends Component {\r\n    state = { email: \"\", password: \"\" };\r\n\r\n    handleEmailChange = ({ target }) => {\r\n        this.setState({ email: target.value });\r\n    };\r\n\r\n    handlePasswordChange = ({ target }) => {\r\n        this.setState({ password: target.value });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        const { dispatch } = this.props;\r\n        const { email, password } = this.state;\r\n\r\n        dispatch(loginUser(email, password));\r\n    };\r\n\r\n    render(){\r\n        const { classes, loginError, isAuthenticated } = this.props;\r\n        if (isAuthenticated) {\r\n            return <Redirect to=\"/\" />;\r\n        } else {\r\n            return (\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <Paper className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            onChange={this.handleEmailChange}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={this.handlePasswordChange}\r\n                        />\r\n                        {loginError && (\r\n                            <Typography component=\"p\" className={classes.errorText}>\r\n                                Incorrect email or password.\r\n                            </Typography>\r\n                        )}\r\n                        <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handleSubmit}\r\n                        >\r\n                                Sign In\r\n                        </Button>\r\n                    </Paper>\r\n                </Container>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLoggingIn: state.auth.isLoggingIn,\r\n        loginError: state.auth.loginError,\r\n        isAuthenticated: state.auth.isAuthenticated\r\n    };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps)(Login));\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nfunction App(props) {\n  const { isAuthenticated, isVerifying } = props;\n  return (\n    <Switch>\n    <ProtectedRoute\n      exact\n      path=\"/\"\n      component={Home}\n      isAuthenticated={isAuthenticated}\n      isVerifying={isVerifying}\n    />\n    <Route path=\"/login\" component={Login} />\n    </Switch>\n  );\n}\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    isVerifying: state.auth.isVerifying\n  };\n}\n\nexport default connect(mapStateToProps)(App);","import { combineReducers } from 'redux'\r\nimport auth from './auth';\r\nexport default combineReducers({auth});","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    LOGOUT_REQUEST,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAILURE,\r\n    VERIFY_REQUEST,\r\n    VERIFY_SUCCESS\r\n} from \"../actions/auth\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (\r\n    state = {\r\n        isLoggingIn: false,\r\n        isLoggingOut: false,\r\n        isVerifying: false,\r\n        loginError: false,\r\n        logoutError: false,\r\n        isAuthenticated: false,\r\n        user: {}\r\n    },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n                    loginError: false\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                    isAuthenticated: true,\r\n                    user: action.user\r\n            };\r\n        case LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                    isAuthenticated: false,\r\n                    loginError: true\r\n            };\r\n        case LOGOUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoggingOut: true,\r\n                    logoutError: false\r\n            };\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n                    isAuthenticated: false,\r\n                    user: {}\r\n            };\r\n        case LOGOUT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n                    logoutError: true\r\n            };\r\n        case VERIFY_REQUEST:\r\n            return {\r\n                ...state,\r\n                isVerifying: true,\r\n                    verifyingError: false\r\n            };\r\n        case VERIFY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isVerifying: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport configureStore from \"./configureStore\";\r\nconst store = configureStore();\r\n\r\nfunction Root() {\r\n    return ( \r\n        <Provider store={store}>\r\n            <Router>\r\n                <App />\r\n            </Router>\r\n        </Provider>\r\n    );\r\n}\r\nexport default Root;","import { applyMiddleware,createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { verifyAuth } from \"./actions/auth\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default function configureStore(persistedState) {\r\n    const store = createStore(\r\n        rootReducer,\r\n        persistedState,\r\n        applyMiddleware(thunkMiddleware)\r\n    );\r\n    store.dispatch(verifyAuth());\r\n    return store;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./root\";\nimport * as serviceWorker from \"register-service-worker\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();"],"sourceRoot":""}